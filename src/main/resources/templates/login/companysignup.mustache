<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>기업 회원가입</title>
    <!--<script src="https://developers.kakao.com/sdk/js/kakao.js"></script>-->
    <script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="/static/css/style.css">
</head>
<body>
<div class="container">
    <h2>기업 회원가입</h2>
    <form id="registrationForm" method="get" action="/companysignup">

        <label for="company_name">기업명:</label>
        <input type="text" id="company_name" name="company_name" required>

        <label for="company_homepage">기업 홈페이지 :</label>
        <input type="text" id="company_homepage" name="company_homepage" required>

        <label for="zip_code">우편번호:</label>
        <input type="text" id="zip_code" name="zip_code" placeholder="우편번호" required>
        <input type="button" onclick="execDaumPostcode()" value="우편번호 찾기"><br>

        <label for="address">주소:</label>
        <input type="text" id="company_address1"  name="address" placeholder="주소" required ><br>
        <input type="text" id="company_address2" name="address" placeholder="상세주소">
        <input type="text" id="extraAddress" name="address" placeholder="참고항목">

        <label for="company_email">사업자 이메일:</label>
        <input type="text" id="company_email" name="company_email" required>

        <br/>
        <label for="terms">약관에 동의합니다:</label>
        <input type="checkbox" id="terms" name="terms" required>
        <br/>
        <button type="submit" id="submitBtn">기업 회원가입</button>
    </form>
</div>

<script>
    // 카카오 주소검색
function execDaumPostcode() {   // 우편번호 찾기 버튼을 누르면,
    new daum.Postcode({    //우편번호 실행
        oncomplete: function(data) {
            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

            // 각 주소의 노출 규칙에 따라 주소를 조합한다.
            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
            var addr = ''; // 주소 변수
            var extraAddr = ''; // 참고항목 변수

            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                addr = data.roadAddress;
            } else { // 사용자가 지번 주소를 선택했을 경우(J)
                addr = data.jibunAddress;
            }

            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
            if(data.userSelectedType === 'R'){
                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                    extraAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if(data.buildingName !== '' && data.apartment === 'Y'){
                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                if(extraAddr !== ''){
                    extraAddr = ' (' + extraAddr + ')';
                }
                // 조합된 참고항목을 해당 필드에 넣는다.
                document.getElementById("extraAddress").value = extraAddr;

            } else {
                document.getElementById("extraAddress").value = '';
            }

            // 우편번호와 주소 정보를 해당 필드에 넣는다.
            document.getElementById('zip_code').value = data.zonecode;
            document.getElementById("company_address1").value = addr;  //메인주소
            // 커서를 상세주소 필드로 이동한다.
            document.getElementById("company_address2").focus();  //상세주소
        }
    }).open();
}
</script>

<script>

      function execDaumPostcode() {
          new daum.Postcode({
              oncomplete: function(data) {
                  const addressInput = document.getElementById("company_address1");
                  const zipCodeInput = document.getElementById("zip_code");
                  const extraAddressInput = document.getElementById("extraAddress"); // extraAddress 필드 가져오기

                  addressInput.value = data.address;
                  zipCodeInput.value = data.zonecode;

                  // 각 주소 정보 가져오기
                  const address = data.address;
                  const zonecode = data.zonecode;
                  const userSelectedType = data.userSelectedType;

                  // extraAddress 필드 설정 (도로명 주소일 때만)
                  if (userSelectedType === 'R') {
                      // 참고항목 조합
                      let extraAddr = '';
                      if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {
                          extraAddr += data.bname;
                      }
                      if (data.buildingName !== '' && data.apartment === 'Y') {
                          extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                      }
                      if (extraAddr !== '') {
                          extraAddr = ' (' + extraAddr + ')';
                      }

                      // extraAddress 필드에 설정
                      extraAddressInput.value = extraAddr;
                  } else {
                      // 도로명 주소가 아닌 경우, extraAddress 필드를 비웁니다.
                      extraAddressInput.value = '';
                  }

                  validateForm(); // 유효성 검사 실행
              }
          }).open();
      }

          const nameInput = document.getElementById("company_name");
          const homepageInput = document.getElementById("company_homepage");
          const addressInput = document.getElementById("company_address1");
          const address2Input = document.getElementById("company_address2");
          const extraAddressInput = document.getElementById("extraAddress");
          const emailInput = document.getElementById("company_email");
          const termsCheckbox = document.getElementById("terms");
          const submitButton = document.getElementById("submitBtn");


        function validateForm() {  // 각 필드값에 유효성 검사하는 함수

              const name = nameInput.value.trim();
              const homepage = homepageInput.value.trim();
              const address1 = addressInput.value.trim();
              const address2 = address2Input.value.trim();
              const extraAddress = extraAddressInput.value;
              const email = emailInput.value.trim();
              const termsAgreed = termsCheckbox.checked;

              const isInvalid = (
              name === "" ||
              homepage === "" ||
              address1 === "" ||
              address2 === "" ||
              extraAddress === "" ||
              email === "" ||
              !termsAgreed
          );

         if (isInvalid) {
              submitButton.disabled = true;

          } else {
              submitButton.disabled = false;
          }
      }

          nameInput.addEventListener("input", validateForm);
          homepageInput .addEventListener("input", validateForm);
          addressInput.addEventListener("input", validateForm);
          address2Input.addEventListener("input", validateForm);
          extraAddressInput.addEventListener("input", validateForm);
          emailInput.addEventListener("input", validateForm);
          termsCheckbox.addEventListener("change", validateForm);
</script>

</body>
</html>