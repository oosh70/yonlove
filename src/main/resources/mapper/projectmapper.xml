<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.yoonlove.mapper.ProjectMapper">

    <select id="selectListProject" parameterType="com.example.yoonlove.dto.PageDto" resultType="com.example.yoonlove.dto.ProjectDto">
        select *
        <!--검색결과에 rownum을 하고 r로 지정-->
        from(select rownum as r, t.*

        <!--  ( 결과 또는 검색 후 리스트에 대한 결과 )를 t로 지정-->
        from (select * from ${table}
        where 1=1
        <if test="title != null and search != ''">
            AND project_name like '%${title}%'
        </if>

        <if test="writer != null and search != ''">
            AND project_writer like '%${writer}%'
        </if>

        order by ${id} desc) t)

        <!-- rownum을 기준(r)으로 시작번호부터 끝번호까지 검색   -->
        where r between #{postStart} and #{postEnd}
    </select>

    <!--검색유무에 따라 게시판의 총 게시글 수는 구하는 쿼리-->
    <select id="totalProjectPost" parameterType="com.example.yoonlove.dto.PageDto">
        select count(${id}) as totalPost from ${table}
        where 1=1 <!--검색어가 공란이면 전체 리스트 조회-->
        <!--검색어가 있다면 아래 조건문을 실행-->
        <if test="title != null and search != ''">
            AND project_name like '%${title}%'
        </if>

        <if test="writer != null and search != ''">
            AND project_writer like '%${writer}%'
        </if>
    </select>



    <select id="selectProject" resultType="com.example.yoonlove.dto.ProjectDto">
        SELECT * FROM project where project_id= #{project_id}
    </select>



    <insert id="insertProject">
        insert into project values(
            (select concat('project', (nvl(max(substr(project_id, 8)), 0)+1)) from project),<!--pk코드 자동증가(수정)-->
            #{project_name},
            #{project_num},
            '테스트',
            '테스트진행중',
            '기획내용 내용테스트',
            '2023/10/11',
            null,
            null,
            null,
            'true',
            null,
            'com1'
        )
    </insert>

    <update id="updateProject" >
        UPDATE project
        SET
        project_name = #{project_name},
        project_num = #{project_num}
        where project_id = #{project_id}
        </update>

    <delete id="deleteProject">
        DELETE FROM project WHERE project_id = #{project_id}
    </delete>


    <!-- !!!!!!!!!!!!!!!!!!!!=======================프로젝트 기획 끝!!!!!!!!!!!!!!!!!!!! -->

    <select id="selectListBudget" parameterType="com.example.yoonlove.dto.PageDto" resultType="com.example.yoonlove.dto.BudgetDto">
        select *
        <!--notice검색결과에 rownum을 하고 r로 지정-->
        from(select rownum as r, t.*
        <!--  (   notice 결과 또는 검색 후 리스트에 대한 결과      )를 t로 지정-->
        from (select * from ${table}
        where 1=1
        <if test="title != null and search != ''">
            AND budget_name like '%${title}%'
        </if>
        order by ${id} desc) t)
        <!-- rownum을 기준(r)으로 시작번호부터 끝번호까지 검색   -->
        where r between #{postStart} and #{postEnd}
    </select>

    <select id="totalBudgetPost" parameterType="com.example.yoonlove.dto.PageDto">
        select count(${id}) as totalPost from ${table}
        where 1=1 <!--검색어가 공란이면 전체 리스트 조회-->
        <!--검색어가 있다면 아래 조건문을 실행-->
        <if test="title != null and search != ''">
            AND budget_name like '%${title}%'
        </if>
    </select>


    <select id="selectBudget" resultType="com.example.yoonlove.dto.BudgetDto">
        SELECT * FROM budget
        where budget_id = #{budget_id}
    </select>

    <insert id="insertBudget">
        insert into budget values(
        (select concat('budget', (nvl(max(substr(budget_id, 7)), 0)+1)) from budget),<!--pk코드 자동증가(수정)-->
        #{budget_name},
       '테스트내용',
        #{budget_amount},
        'code101',
        '예산서테스터01',
        'project2'
        )
    </insert>

    <update id ="updateBudget">
        UPDATE budget
        SET
        budget_name = #{budget_name},
        budget_amount = #{budget_amount}

        where budget_id = #{budget_id}
    </update>

    <delete id="deleteBudget"> DELETE FROM budget WHERE budget_id = #{budget_id}</delete>

    <!--=========================================Budget 완료 !!!!!!!!!!======================== -->
    <select id="selectListProduce" parameterType="com.example.yoonlove.dto.PageDto" resultType="com.example.yoonlove.dto.ProduceDto">
        select *
        <!--notice검색결과에 rownum을 하고 r로 지정-->
        from(select rownum as r, t.*
        <!--  (   notice 결과 또는 검색 후 리스트에 대한 결과      )를 t로 지정-->
        from (select * from ${table}
        where 1=1
        <if test="title != null and search != ''">
            AND pd_name like '%${title}%'
        </if>
        order by ${id} desc) t)
        <!-- rownum을 기준(r)으로 시작번호부터 끝번호까지 검색   -->
        where r between #{postStart} and #{postEnd}
    </select>

    <select id="totalProducePost" parameterType="com.example.yoonlove.dto.PageDto">
        select count(${id}) as totalPost from ${table}
        where 1=1 <!--검색어가 공란이면 전체 리스트 조회-->
        <!--검색어가 있다면 아래 조건문을 실행-->
        <if test="title != null and search != ''">
            AND pd_name like '%${title}%'
        </if>
    </select>
    
    <select id="selectProduce" resultType="com.example.yoonlove.dto.ProduceDto">
        select * from produce
        where pd_id = #{pd_id}
    </select>

    <insert id="insertProduce">
        insert into produce values(
        (select concat('pd', (nvl(max(substr(pd_id, 3)), 0)+1)) from produce),<!--pk코드 자동증가(수정)-->
        #{pd_name},
        #{role},
        #{casting},
        'project1',
        'admin'
        )
    </insert>

    <delete id="deleteProduce"> delete from produce where pd_id = #{pd_id} </delete>

    <update id="updateProduce">
        update produce
        set
        pd_name = #{pd_name},
        role = #{role},
        casting = #{casting}

        where pd_id = #{pd_id}
    </update>
    <!--==================================프로듀스 완료 !!!!!!!!!!============== -->
</mapper>