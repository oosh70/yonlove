<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.yoonlove.mapper.CsMapper">
    <select id="selectNotice" resultType="com.example.yoonlove.dto.NoticeDto">
        SELECT * FROM notice where notice_id=#{notice_id}
    </select>

    <!--조회수증가-->
    <update id="NoticeCnt">
        update notice set notice_cnt = notice_cnt+1 where notice_id=#{notice_id}
    </update>


<!--검색유무에 따라 게시판의 총 게시글 수는 구하는 쿼리-->
    <select id="totalNoticePost" parameterType="com.example.yoonlove.dto.PageDto">
        select count(${id}) as totalPost from ${table}
        where 1=1 <!--검색어가 공란이면 전체 리스트 조회-->
        <!--검색어가 있다면 아래 조건문을 실행-->
        <if test="title != null and search != ''">
            AND notice_title like '%${title}%'
        </if>
        <if test="writer != null and search != ''">
            AND notice_writer like '%${writer}%'
        </if>
    </select>


    <select id="selectListNotice" parameterType="com.example.yoonlove.dto.PageDto" resultType="com.example.yoonlove.dto.NoticeDto">
        select *
        <!--notice검색결과에 rownum을 하고 r로 지정-->
        from(select rownum as r, t.*

        <!--  (   notice 결과 또는 검색 후 리스트에 대한 결과      )를 t로 지정-->
        from (select * from ${table}
        where 1=1
        <if test="title != null and search != ''">
            AND notice_title like '%${title}%'
        </if>
        <if test="writer != null and search != ''">
            AND notice_writer like '%${writer}%'
        </if>
        order by ${id} desc) t)

        <!-- rownum을 기준(r)으로 시작번호부터 끝번호까지 검색   -->
        where r between #{postStart} and #{postEnd}
    </select>



    <insert id="insertNotice" parameterType="com.example.yoonlove.dto.NoticeDto">
        insert into notice values(
        (select NVL(Max(notice_id),0)+1 from notice),
        #{notice_title},
        #{notice_content},
        #{notice_writer},  <!--닉네임-->
        (select * from todaytime)<!--현재 날짜+시간 뷰테이블-->,
        '23-9-12',
        0,
        #{user_id})
    </insert>

    <update id="updateNotice">
        update notice set notice_title = #{notice_title}, notice_content=#{notice_content}
        where notice_id = #{notice_id}
    </update>

    <delete id="deleteNotice">
        delete from notice where notice_id=#{notice_id}
    </delete>




    <!--QnA-->
    <select id="selectQnA" resultType="com.example.yoonlove.dto.QnADto">
        SELECT * FROM qna where qna_id=#{qna_id}
    </select>
    <!--조회수증가-->
    <update id="QnACnt">
        update qna set qna_cnt = qna_cnt+1 where qna_id=#{qna_id}
    </update>

    <select id="selectListQnA" resultType="com.example.yoonlove.dto.QnADto">
        select *
        <!--notice검색결과에 rownum을 하고 r로 지정-->
        from(select rownum as r, t.*

        <!--  (   notice 결과 또는 검색 후 리스트에 대한 결과      )를 t로 지정-->
        from (select * from ${table}
        where 1=1
        <if test="title != null and search != ''">
            AND qna_title like '%${title}%'
        </if>
        <if test="writer != null and search != ''">
            AND qna_writer like '%${writer}%'
        </if>
        order by ${id} desc) t)

        <!-- rownum을 기준(r)으로 시작번호부터 끝번호까지 검색   -->
        where r between #{postStart} and #{postEnd}
    </select>

    <!--검색유무에 따라 게시판의 총 게시글 수는 구하는 쿼리-->
    <select id="totalQnAPost" parameterType="com.example.yoonlove.dto.PageDto">
        select count(${id}) as totalPost from ${table}
        where 1=1 <!--검색어가 공란이면 전체 리스트 조회-->
        <!--검색어가 있다면 아래 조건문을 실행-->
        <if test="title != null and search != ''">
            AND qna_title like '%${title}%'
        </if>
        <if test="writer != null and search != ''">
            AND qna_writer like '%${writer}%'
        </if>
    </select>

    <insert id="insertQnA">
        insert into qna values(
        (select NVL(Max(qna_id),0)+1 from qna),<!--글번호를 1씩 증가시키는 서브쿼리-->
        #{qna_title},<!--입력받은 제목-->
        #{qna_content},<!--입력받은 내용-->
        '관리자',<!--작성자(닉네임)-->
        (select * from todaytime)<!--현재 날짜+시간 뷰테이블-->,
        null,<!--수정일자-->
        0,<!--조회수 처음갑은0-->
        'test'<!--작성한 유저id-->)
    </insert>

    <update id="updateQnA">
        update qna set qna_title = #{qna_title}, qna_content=#{qna_content}
        where qna_id = #{qna_id}
    </update>

    <delete id="deleteQnA">
        delete from qna where qna_id = #{qna_id}
    </delete>
</mapper>